

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'ca.mcgill.ecse321'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jodd:jodd-mail:5.0.12'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	
	
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.3'
	testImplementation 'org.springframework.security:spring-security-test:6.2.2'

}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "failed", "skipped"
		showStandardStreams = true
	}

}

tasks.named('test') {
	//...other configurations
	useJUnitPlatform()
	testLogging {
		events "passed", "failed", "skipped"
	}
	finalizedBy jacocoTestCoverageVerification
}

tasks.named('jacocoTestCoverageVerification') {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
	}
	dependsOn test // tests are required to run before checking code coverage.
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
